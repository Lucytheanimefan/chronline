- provide :title, @article.title
- provide :description, @article.teaser

- content_for :head do
  - cache(action_suffix: :head) do
    - if @article.published?
      - article = Article.includes(:authors, :slugs, image: :photographer).find(@article)
      = render partial: 'site/partials/twitter_cards/article', locals: {article: article}
      = render partial: 'site/partials/open-graph/article', locals: {article: article}
    - if @article.block_bots
      meta[name= 'robots' content= 'noindex']
    link[rel= "canonical" href= site_article_url(@article, subdomain: :www, protocol: 'http')]

- cache do
  - @article = Article.unscoped { Article.includes(:authors, :slugs, image: :photographer).find(@article) }
  .page-main-wrap
    article.postable.postable-news
      header.page-header
        .row
          .header-section.columns.small-12= @article.section.name
        .row
          .header-title.columns.small-12
            h1= @article.title
            - if not @article.subtitle.blank?
              p.subtitle= @article.subtitle
        .row
          .header-byline.columns.small-12
            span.author By #{byline(@article, link: true)}
            span.sep= " - "
            = display_date(@article)
      .row.page-feature(data-match-height)
        aside.page-sidebar.columns.small-12.large-1
          = render partial: 'beta/partials/feature-social', locals: {postable: @article}
        section.page-feature-jumbotron.columns.small-12.large-11
          //TODO(rivkees): implement video, gallary, and graph jumbo's
          - if @article.embed_code.present?
            = render partial: 'partials/main-video'
          - elsif @article.image
            = render partial: 'partials/jumbotron-default', locals: {image: @article.image}
      .page-main.row
        section.page-body-content.columns.small-8
          == @article.render_body

        aside.columns.small-4
          = render partial: 'site/partials/advertisement', locals: {zone: :medium_rectangle}
          = render 'site/partials/facebook-recommended'
          = render partial: 'site/partials/advertisement', locals: {zone: :medium_rectangle, suffix: 1}
          = render partial: 'site/partials/advertisement', locals: {zone: :medium_rectangle, suffix: 2}
    .row
      section#recommended= render partial: 'site/containers/article-row', locals: {title: 'Recommended', articles: @article.related(4), feature: false, style: :title}
      section#disqus_thread.rounded[data-disqus= disqus_options(@article)]